name: Build Podman Images

on:
  push:
    branches:
    - master
    - test-* # make it be easier for contributors to test
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'master'

jobs:
  BuildBase:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Build base agent
        uses: ./.github/actions/build
        with:
          context: base
          dockerfile: base/podman/Dockerfile
          image-name: builder-base
          tag-suffix: -podman
          platforms: linux/amd64,linux/arm64
          docker-namespace: ${{ secrets.DOCKER_HUB_USER }}
          docker-password: ${{ secrets.DOCKER_HUB_SECRETS }}
          ghcr-token: ${{ secrets.GHCR_TOKEN }}

  BuildGo:
    needs: BuildBase
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: Build Go agent
      uses: ./.github/actions/build
      with:
        context: go
        dockerfile: go/podman/Dockerfile
        image-name: builder-go
        tag-suffix: -podman
        platforms: linux/amd64,linux/arm64
        docker-namespace: ${{ secrets.DOCKER_HUB_USER }}
        docker-password: ${{ secrets.DOCKER_HUB_SECRETS }}
        ghcr-token: ${{ secrets.GHCR_TOKEN }}
        build-args: "GOLANG_VERSION=1.22.5"
  BuildGo20:
    needs: BuildBase
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: Build Go 1.20 agent
      uses: ./.github/actions/build
      with:
        context: go
        dockerfile: go/podman/Dockerfile
        image-name: builder-go
        tag-suffix: -1.20-podman
        platforms: linux/amd64,linux/arm64
        docker-namespace: ${{ secrets.DOCKER_HUB_USER }}
        docker-password: ${{ secrets.DOCKER_HUB_SECRETS }}
        ghcr-token: ${{ secrets.GHCR_TOKEN }}
        build-args: "GOLANG_VERSION=1.20.14"
  BuildGo21:
    needs: BuildBase
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: Build Go 1.21 agent
      uses: ./.github/actions/build
      with:
        context: go
        dockerfile: go/podman/Dockerfile
        image-name: builder-go
        tag-suffix: -1.21-podman
        platforms: linux/amd64,linux/arm64
        docker-namespace: ${{ secrets.DOCKER_HUB_USER }}
        docker-password: ${{ secrets.DOCKER_HUB_SECRETS }}
        ghcr-token: ${{ secrets.GHCR_TOKEN }}
        build-args: "GOLANG_VERSION=1.21.12"
  BuildGo22:
    needs: BuildBase
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: Build Go 1.22 agent
      uses: ./.github/actions/build
      with:
        context: go
        dockerfile: go/podman/Dockerfile
        image-name: builder-go
        tag-suffix: -1.22-podman
        platforms: linux/amd64,linux/arm64
        docker-namespace: ${{ secrets.DOCKER_HUB_USER }}
        docker-password: ${{ secrets.DOCKER_HUB_SECRETS }}
        ghcr-token: ${{ secrets.GHCR_TOKEN }}
        build-args: "GOLANG_VERSION=1.22.5"

  BuildMaven:
    needs: BuildBase
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: Build maven agent
      uses: ./.github/actions/build
      with:
        context: maven
        dockerfile: maven/podman/Dockerfile
        image-name: builder-maven
        tag-suffix: -podman
        platforms: linux/amd64,linux/arm64
        docker-namespace: ${{ secrets.DOCKER_HUB_USER }}
        docker-password: ${{ secrets.DOCKER_HUB_SECRETS }}
        ghcr-token: ${{ secrets.GHCR_TOKEN }}
        build-args: |
          "JDK_VERSION=17"
          "JDK_HOME=/usr/java/default"
  BuildMavenJDK11:
    needs: BuildBase
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: Build maven(JDK11) agent
      uses: ./.github/actions/build
      with:
        context: maven
        dockerfile: maven/podman/Dockerfile
        image-name: builder-maven
        tag-suffix: -jdk11-podman
        platforms: linux/amd64,linux/arm64
        docker-namespace: ${{ secrets.DOCKER_HUB_USER }}
        docker-password: ${{ secrets.DOCKER_HUB_SECRETS }}
        ghcr-token: ${{ secrets.GHCR_TOKEN }}
        build-args: "JDK_VERSION=11"
  BuildMavenJDK17:
    needs: BuildBase
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Build maven(JDK17) agent
        uses: ./.github/actions/build
        with:
          context: maven
          dockerfile: maven/podman/Dockerfile
          image-name: builder-maven
          tag-suffix: -jdk17-podman
          platforms: linux/amd64,linux/arm64
          docker-namespace: ${{ secrets.DOCKER_HUB_USER }}
          docker-password: ${{ secrets.DOCKER_HUB_SECRETS }}
          ghcr-token: ${{ secrets.GHCR_TOKEN }}
          build-args: |
            "JDK_VERSION=17"
            "JDK_HOME=/usr/java/default"
  BuildMavenJDK21:
    needs: BuildBase
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Build maven(JDK21) agent
        uses: ./.github/actions/build
        with:
          context: maven
          dockerfile: maven/podman/Dockerfile
          image-name: builder-maven
          tag-suffix: -jdk21-podman
          platforms: linux/amd64,linux/arm64
          docker-namespace: ${{ secrets.DOCKER_HUB_USER }}
          docker-password: ${{ secrets.DOCKER_HUB_SECRETS }}
          ghcr-token: ${{ secrets.GHCR_TOKEN }}
          build-args: |
            "JDK_VERSION=21"
            "JDK_HOME=/usr/java/default"

  BuildGradle:
    needs: BuildBase
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: Build Gradle agent
      uses: ./.github/actions/build
      with:
        context: gradle
        dockerfile: gradle/podman/Dockerfile
        image-name: builder-gradle
        tag-suffix: -podman
        platforms: linux/amd64,linux/arm64
        docker-namespace: ${{ secrets.DOCKER_HUB_USER }}
        docker-password: ${{ secrets.DOCKER_HUB_SECRETS }}
        ghcr-token: ${{ secrets.GHCR_TOKEN }}

  BuildNodeJs:
    needs: BuildBase
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: Build NodeJS agent
      uses: ./.github/actions/build
      with:
        context: nodejs
        dockerfile: nodejs/podman/Dockerfile
        image-name: builder-nodejs
        tag-suffix: -podman
        platforms: linux/amd64,linux/arm64
        docker-namespace: ${{ secrets.DOCKER_HUB_USER }}
        docker-password: ${{ secrets.DOCKER_HUB_SECRETS }}
        ghcr-token: ${{ secrets.GHCR_TOKEN }}
        build-args: "NODE_VERSION=20.15.1"
  BuildNodeJs18:
    needs: BuildBase
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: Build NodeJS 18 LTS agent
      uses: ./.github/actions/build
      with:
        context: nodejs
        dockerfile: nodejs/podman/Dockerfile
        image-name: builder-nodejs
        tag-suffix: 18-podman
        platforms: linux/amd64,linux/arm64
        docker-namespace: ${{ secrets.DOCKER_HUB_USER }}
        docker-password: ${{ secrets.DOCKER_HUB_SECRETS }}
        ghcr-token: ${{ secrets.GHCR_TOKEN }}
        build-args: "NODE_VERSION=18.18.1"
  BuildNodeJs20:
    needs: BuildBase
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: Build NodeJS 20 LTS agent
      uses: ./.github/actions/build
      with:
        context: nodejs
        dockerfile: nodejs/podman/Dockerfile
        image-name: builder-nodejs
        tag-suffix: -20-podman
        platforms: linux/amd64,linux/arm64
        docker-namespace: ${{ secrets.DOCKER_HUB_USER }}
        docker-password: ${{ secrets.DOCKER_HUB_SECRETS }}
        ghcr-token: ${{ secrets.GHCR_TOKEN }}
        build-args: "NODE_VERSION=20.15.1"

  BuildDotnet:
    needs: BuildBase
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: Build DotNet agent
      uses: ./.github/actions/build
      with:
        context: dotnet
        dockerfile: dotnet/podman/Dockerfile
        image-name: builder-dotnet
        tag-suffix: -podman
        platforms: linux/amd64,linux/arm64
        docker-namespace: ${{ secrets.DOCKER_HUB_USER }}
        docker-password: ${{ secrets.DOCKER_HUB_SECRETS }}
        ghcr-token: ${{ secrets.GHCR_TOKEN }}
        build-args: "DOTNET_VERSION=8.0"
  BuildDotnet6:
    needs: BuildBase
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: Build DotNet 6.0 agent
      uses: ./.github/actions/build
      with:
        context: dotnet
        dockerfile: dotnet/podman/Dockerfile
        image-name: builder-dotnet
        tag-suffix: -6-podman
        platforms: linux/amd64,linux/arm64
        docker-namespace: ${{ secrets.DOCKER_HUB_USER }}
        docker-password: ${{ secrets.DOCKER_HUB_SECRETS }}
        ghcr-token: ${{ secrets.GHCR_TOKEN }}
        build-args: "DOTNET_VERSION=6.0"
  BuildDotnet8:
    needs: BuildBase
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: Build DotNet 8.0 agent
      uses: ./.github/actions/build
      with:
        context: dotnet
        dockerfile: dotnet/podman/Dockerfile
        image-name: builder-dotnet
        tag-suffix: -8-podman
        platforms: linux/amd64,linux/arm64
        docker-namespace: ${{ secrets.DOCKER_HUB_USER }}
        docker-password: ${{ secrets.DOCKER_HUB_SECRETS }}
        ghcr-token: ${{ secrets.GHCR_TOKEN }}
        build-args: "DOTNET_VERSION=8.0"

  BuildPython:
    needs: BuildBase
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: Build Python agent
      uses: ./.github/actions/build
      with:
        context: python
        dockerfile: python/podman/Dockerfile
        image-name: builder-python
        tag-suffix: -podman
        platforms: linux/amd64,linux/arm64
        docker-namespace: ${{ secrets.DOCKER_HUB_USER }}
        docker-password: ${{ secrets.DOCKER_HUB_SECRETS }}
        ghcr-token: ${{ secrets.GHCR_TOKEN }}
